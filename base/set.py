'======================================Set================================='
#множества - изменяемый, неупорядочный,итерируемый тип данных предназначенный для хранения уникальных значений, множества могут хранить в себе только неизменяемый тип данных.фЕсли внутри set используется tuple то и внутри тюпл должны быть неизменяемый типы данных  ({'1,2,3,4, ('str), 12, Truee})
#в Set работает в правило - fiF0 (first in first out)

# set_1 = {1,0, True, 'hi'} 
# print(set_1)

'==================================FIFO/LIFO========================================'

# FIFO - first in first out (очередь в банк кто первый встал на очеред тот выйдте первым)
#LIFO - last in first out (стопка бумаг, выйдте та бумаг акоторую вы поставили последним)

'===================================методы Set=========================================='

'add - добовляет элементы в set'
# set1 = {1,2,3}
# set1.add(3) #ничего не изменится
# set1.add(5) #{1,2,3,5}
# print(set1) #{1,2,3,5}

'pop - удаляет случайный элемент из set т.к неупорядочный'

# set2 = {1,2,3}
# popped = set2.pop()
# print(set2)

'remove - удаляет элемент из Set  по значению'

# set3 = {1,2,3}
# set3.remove(3)
# print(set3)
# print(dir(set)) 
'union - обьеденяет set1 и set2'
# set1 = {1,2,3}
# set2 = {4,5,6}
# set1.union(set)
# print(set1)

'update - обьеденяет set1 и set2 и сохраняет изменения в set1'

# set1 = {1,2,3}
# set2 = {4,5,6}
# set1.update(set2)
# print(set1)

'difference (-) находит разницу из set1 при помощи set2'
# set1 = {1,2,3}
# set2 = {3,4,5}
# print(set1.difference(set2)) #{1,2}
# print(set2.difference(set1)) #{4,5}
# print(set1 - set2)
# print(set2 - set1)

# 'symmetric_difference - '
# set1 = {1,2,3}
# set2 = {3,4,5}
# print(set1.symmetric_difference(set2)) #{1,2,3,4,5}

'intesection (&) - находит схожие элементы из двух сетов set1 и set2'
# set1 = {1,2,3,4}
# set2 = {3,4,5,6}
# print(set1.intersection(set2)) #{3,4}
# print(set1 & set2) #{3,4}

print(8>10)
